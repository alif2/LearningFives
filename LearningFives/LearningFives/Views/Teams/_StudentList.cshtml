@using ActionModels.Teams
@model List<StudentProfileAM>

@foreach (var student in Model)
{
    var positionIcon = "Content/role/";
    switch (student.RoleInfo.PreferredRole)
    {
        case "TopLane":
            positionIcon += "top.png";
            break;
        case "Jungle":
            positionIcon += "jungle.png";
            break;
        case "MidLane":
            positionIcon += "mid.png";
            break;
        case "Adc":
            positionIcon += "bot.png";
            break;
        case "Support":
            positionIcon += "support.png";
            break;
        default:
            positionIcon += "fill.png";
            break;
    }

    var seriousLevel = string.Empty;
    switch (student.Commitment.SeriousnessLevel)
    {
        case 0:
            seriousLevel = "C";
            break;
        case 1:
            seriousLevel = "SS";
            break;
        case 2:
            seriousLevel = "S";
            break;
    }

    var rankIcon = "Content/rank/";
    if (student.SummonerInfo.RiotApiInfo == null)
    {
        rankIcon = string.Empty;
    }
    else
    {
        switch (student.SummonerInfo.RiotApiInfo.Leagues.First(x => x.QueueType == "RANKED_SOLO_5x5").Tier)
        {
            case "BRONZE":
                rankIcon += "bronze.png";
                break;
            case "SILVER":
                rankIcon += "silver.png";
                break;
            case "GOLD":
                rankIcon += "gold.png";
                break;
            case "PLATINUM":
                rankIcon += "platinum.png";
                break;
            case "DIAMOND":
                rankIcon += "diamond.png";
                break;
            case "MASTER":
                rankIcon += "master.png";
                break;
            case "CHALLENGER":
                rankIcon += "challenger.png";
                break;
            default:
                rankIcon += "provisional.png";
                break;
        }
    }
    var isToxic = student.Toxic.ToxicLevel > 0;
    var isRedFlag = student.Toxic.HadLowPriorityPunish || student.Toxic.HadChatRestrictions || student.Toxic.HadRankedRestrictions || student.Toxic.HadTemporaryBan || student.Toxic.HadPermanentBan;

    <div class="col-md-4 summoner-card student-card">
        <div class="row">
            <span class="col-md-2" style="background-color: #2f8bcb;border-radius: 2px">@student.SummonerInfo.Server</span>
            <span class="col-md-7">@student.SummonerInfo.SummonerName</span>
            <span class="col-md-1"><img src="@positionIcon" style="width:25px"/></span>
            <span class="col-md-2" style="text-align:right">[@seriousLevel]</span>
        </div>
        <div class="row">
            <div class="col-md-2"><img src="@rankIcon" style="width:50px"/></div>
            <div class="col-md-10" style="text-align: right">
                Speaks: @student.Languages<br/>
                Team: @student.PairedPlayers
            </div>
        </div>
        <div class="row">
            @if (isToxic)
            {
                <span>Toxic</span>
            }

            @if (isRedFlag)
            {
                <span>RedFlag</span>
            }
        </div>
    </div>
}